version: '3'
services:
  nginx-admin:
    image: nginx:alpine
    restart: always
    ports:
      - ${PORT}:8000
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    volumes:
      - ./data/nginx:/etc/nginx/conf.d
      - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
    networks:
      - backend-network

  certbot:
    image: certbot/certbot
    restart: always
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  backend:
    build: .
    environment:
      - NODE_ENV=production
      - WAIT_HOSTS=postgres:5432,db_cache:6379
    restart: always
    expose:
      - 3000
    volumes:
      - .:/opt/backend
      - /opt/backend/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - backend-network

  postgres:
    image: postgres:11-alpine
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    restart: always
    expose:
      - 5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - backend-network

  redis:
    image: redis:alpine
    container_name: db_cache
    restart: always
    expose:
      - 6379
    networks:
      - backend-network

volumes:
  postgres:

networks:
  backend-network:
