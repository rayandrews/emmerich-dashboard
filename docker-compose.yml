version: '3'
services:
  nginx:
    image: nginx:alpine
    restart: always
    ports:
      - ${BACKEND_PORT}:8000
      - ${FRONTEND_PORT}:8080
    command: '/bin/sh -c ''while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g "daemon off;"'''
    volumes:
      - ./frontend/build:/var/www/frontend
      - ./data/nginx:/etc/nginx/conf.d
      # - ./data/certbot/www:/var/www/certbot
    depends_on:
      - backend
    networks:
      - emmerich-network

  # certbot:
  #   image: certbot/certbot
  #   restart: always
  #   entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  #   volumes:
  #     - ./data/certbot/conf:/etc/letsencrypt
  #     - ./data/certbot/www:/var/www/certbot

  frontend:
    build: ./frontend
    environment:
      - NODE_ENV=production
    restart: always
    volumes:
      - ./frontend:/opt/frontend
      - /opt/frontend/node_modules
    depends_on:
      - backend
    networks:
      - emmerich-network
  
  backend:
    build: ./backend
    environment:
      - WAIT_HOSTS=postgres:5432,db_cache:6379
    restart: always
    command: sh -c 'yarn && /wait && yarn start:prod'
    expose:
      - 3000
    volumes:
      - ./backend:/opt/backend
      - /opt/backend/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - emmerich-network

  postgres:
    image: postgres:11-alpine
    environment:
      - POSTGRES_USER=${TYPEORM_USERNAME}
      - POSTGRES_PASSWORD=${TYPEORM_PASSWORD}
      - POSTGRES_DB=${TYPEORM_DATABASE}
    restart: always
    expose:
      - 5432
    volumes:
      - postgres:/var/lib/postgresql/data
    networks:
      - emmerich-network

  redis:
    image: redis:alpine
    container_name: db_cache
    restart: always
    expose:
      - 6379
    networks:
      - emmerich-network

volumes:
  postgres:

networks:
  emmerich-network:
